% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkInput.R
\name{checkInput}
\alias{checkInput}
\title{Checks input and initial likelihood}
\usage{
checkInput(from, to, ids.from, ids.to, extend = TRUE, limit = 1,
  nbest = 1, plots = FALSE)
}
\arguments{
\item{from}{A list of singeltons}

\item{to}{A list of pedigrees}

\item{ids.from}{Character vector with names of PM-samples if these
come from different individuals. If NULL, different individuals are not assumed
and names are taken from `from`}

\item{ids.to}{Character vector with names of missing persons}

\item{extend}{Logical. If `TRUE`any number of victims need not be among 
the missing persons}

\item{limit}{Double. Threshold for LR}

\item{nbest}{Integer If not `NULL`, search is restricted to the `nbest`
marginal solutions for each victim}

\item{plots}{Logical. If `TRUE`, plot(s) of the best solution will be made. 
A plot window should  be prepared and sized in advance}
}
\value{
List with two elements. First `error` is `NULL` if no error is detected
the second `lik0` is the NULL likelihood.
}
\description{
Parameters are described as in [divSearch], nothing is done here 
beyond checking  and calculating NULL likelihoood.
}
\details{
In addition to the obvious, it is e.g. checked that all PM-samples have
some marker data and that no MP-s have any marker data
}
\examples{
\dontrun{
data(dvi.nfi)
data(dvi.nfi.mut)
dvi.nfi = dvi.nfi.mut
from = dvi.nfi$pm
to = dvi.nfi$am
ids.from = dvi.nfi$vict
ids.to = dvi.nfi$miss
extend = T; limit = -1; nbest = 1; plots = TRUE
foo = checkInput(from, to, ids.from, ids.to, extend = extend, limit = limit, 
     nbest = nbest, plots = plots)
stopifnot(is.null(foo$error) $ foo$lik0 > 0)
     
v1 = singleton("V1")
m1 = marker(v1, V1=1)
v1 = addMarkers(v1, m1)
v2 = singleton("V2")
m2 = marker(v2, V2 = 2)
v2 = addMarkers(v2, m2)
from = list(v1, v2)
ids.from = getIDs(from)
to1 = nuclearPed(1, father = "R1", mother = "MO", child = "MP1")
m1 = marker(to1, "R1" = 2)
to = addMarkers(to1, m1)
ids.to = "MP1"
foo = checkInput(from, to, ids.from, ids.to, extend = extend, limit = limit, 
     nbest = nbest, plots = plots)
}
}
