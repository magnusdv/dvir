% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jointDVI.R
\name{jointDVI}
\alias{jointDVI}
\title{Joint DVI search}
\usage{
jointDVI(
  pm,
  am,
  missing,
  moves = NULL,
  limit = 0,
  undisputed = TRUE,
  markers = NULL,
  threshold = 10000,
  disableMutations = NA,
  numCores = 1,
  check = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{pm}{A list of singletons.}

\item{am}{A list of pedigrees.}

\item{missing}{Character vector with names of missing persons.}

\item{moves}{A list of possible assignments for each victim. If NULL, all
sex-matching assignments are considered.}

\item{limit}{A positive number. Only pairwise LR values above this are
considered.}

\item{undisputed}{A logical.}

\item{markers}{A vector indicating which markers should be included in the
analysis. By default all markers are included.}

\item{threshold}{A positive number, passed onto [findUndisputed()].}

\item{disableMutations}{A logical, or NA (default). The default action is to
disable mutations in all reference families without Mendelian errors.}

\item{numCores}{Integer. The number of cores used in parallelisation.
Default: 1.}

\item{check}{A logical, indicating if the input data should be checked for
consistency.}

\item{verbose}{A logical.}
}
\value{
A data frame. Each row describes an a priori possible move. The log
  likelihood, the LR with the null hypothesis of no moves in the numerator,
  and the posterior corresponding to a flat prior, i.e., the inverse of the
  number of assignments.
}
\description{
Victims are given as a list of singletons and references as list of
pedigrees. Based on a specification of moves for each victim, if any, all
possible assignments are evaluated and solutions ranked according to the
likelihood.
}
\examples{
pm = example2$pm
am = example2$am
missing = example2$missing

jointDVI(pm, am, missing)
\donttest{
# Last example in Chapter 4 of 'Mass identifications", Kling et al (2021)
  pm = dataCh4$pm
  am = dataCh4$am
  missing = dataCh4$missing
  pedtools::plotPedList(am, marker = 1:2)
  pedtools::plotPedList(pm, marker = 1:2)
  res = jointDVI(pm, am, missing)
  res = jointDVI(pm, am, missing, disableMutations = FALSE)
  res[c(1,2,30,49),]
  }

}
\seealso{
[pairwiseLR()]
}
