% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dviSim.R
\name{dviSim}
\alias{dviSim}
\title{Simulate and evaluate DVI cases}
\usage{
dviSim(
  pm,
  am,
  missing,
  simulated = missing,
  true = NULL,
  Nsim = 2,
  seed = NULL,
  disableMutations = NA,
  undisputed = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{pm}{A list of singletons.}

\item{am}{A list of pedigrees.}

\item{missing}{Character vector with names of missing persons.}

\item{simulated}{Character vector with names of persons in am to be simulated}

\item{true}{A character of the same length as `pm`, with the true solution,
e.g., `true = c("M2", "*", "M3)` if the truth is V1 = M2 and V3 = M3.}

\item{Nsim}{Number of simulations.}

\item{seed}{Integer.}

\item{disableMutations}{Logical, see [jointDVI()].}

\item{undisputed}{Logical, see [jointDVI()].}

\item{verbose}{A logical}
}
\value{
A list with two elements, the first the fraction of 'correct' solutions, the second
a matrix with first line, best solution, from [jointDVI()]
}
\description{
Individuals in the am data are first simulated. 
The marker data for the missing persons are then transferred to the pm data according
to the user specified solution to the identification problem. Remaining victims are simulated
as unrelated. The fraction of times the 'correct'
(the one from which data was simulated) is estimated.
}
\examples{
\donttest{
library(pedtools)
pm = dataExercise497$pm
pm = setAlleles(pm, alleles = 0)
am = dataExercise497$am
missing = dataExercise497$missing
true = c("MP1", "MP2", "MP3")
true = c("MP1", "*", "MP3")
true = c("*", "*", "*")
dviSim(pm, am, missing, true = true, Nsim = 2, seed = 17, verbose = TRUE)

pm = example2$pm
pm = setAlleles(pm, alleles = 0)
am = example2$am
missing = example2$missing
true = c("M1", "*", "*")
true = c("M1", "M2", "*")
true = c("M1", "M2", "M3")
dviSim(pm, am, missing, true = true, Nsim = 2, seed = 17, verbose = FALSE)

pm = example1$pm
pm = setAlleles(pm, alleles = 0)
am = example1$am
missing = example1$missing
true = c("M1", "*", "*")
true = c("M1", "M2", "*")
true = c("M1", "M2", "M3")
dviSim(pm, am, missing, true = true, Nsim = 10, seed = 17, verbose = FALSE)
}
}
\seealso{
[jointDVI()]
}
